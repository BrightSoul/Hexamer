{
  "Type": "MultipleChoice",
  "ScoreAwarded": 1.0,
  "CorrectAnswer": "A",
  "Text": {
	"It": "Stai scrivendo un'applicazione che tiene traccia degli appuntamenti dell'utente e lo avvisa con un promemoria quando mancano 10 minuti ad ogni orario prefissato. Nella classe `Calendario` hai già predisposto un orologio interno che solleva l'evento `NotificaAppuntamento` nel momento in cui l'utente deve essere avvisato. Ora non ti resta che sottoscriverti all'evento `NotificaAppuntamento` con una _lambda expression_ per visualizzare il promemoria. In che modo lo realizzi?
",
	"En": ""
  },
  "AnswerText": {
	"It": "Per sottoscriterti ad un evento, usa l'operatore `+=`. Le altre opzioni contengono degli errori sintattici.  
Puoi sottoscriverti sia usando una _lambda expression_, come richiesto dalla domanda, oppure usando un metodo tradizionale come questo:  
```
private void VisualizzaNotifica(object sender, object args) {
    Console.WriteLine(\"Hai un appuntamento!\");
}
```  
Da usare in questo modo:  
```
calendario.NotificaAppuntamento += VisualizzaNotifica;
```  
Eventualmente, puoi fare in modo che l'evento passi come argomento l'oggetto `Appuntamento`, in modo che tu possa visualizzare una notifica più precisa, comprendente ad esempio una descrizione e la data/ora dell'appuntamento.

**Materiale di studio**

[Lezione 4, slide 42](https://files.slack.com/files-pri/T4LSU7RKJ-F4XRA1B4M/04-lezione-esame-unittest-eventi-lambdaexpressions.pdf#page=42)  
[Lezione 4, slide 43](https://files.slack.com/files-pri/T4LSU7RKJ-F4XRA1B4M/04-lezione-esame-unittest-eventi-lambdaexpressions.pdf#page=43)",
	"En": "",
  },
  "Group": "04",
  "Options": [
	{ "Id": "A", "Text": { "It": "calendario.NotificaAppuntamento += (sender, args) => { Console.WriteLine(\"Hai un appuntamento!\"); }", "En": "" } },
	{ "Id": "B", "Text": { "It": "calendario.NotificaAppuntamento.Subscribe((sender, args) => { Console.WriteLine(\"Hai un appuntamento!\"); })", "En": "" } },
	{ "Id": "C", "Text": { "It": "calendario.NotificaAppuntamento = sender, args => { Console.WriteLine(\"Hai un appuntamento!\"); }", "En": "" } },
	{ "Id": "D", "Text": { "It": "calendario.NotificaAppuntamento => (sender, args) { Console.WriteLine(\"Hai un appuntamento!\"); }", "En": "" } }
  ]
}